

@model MinesweeperWebApp.Models.Board

@{
    ViewBag.Title = "Minesweeper";
}

<style >
    table {
        border-collapse: collapse;
        margin: 20px;
    }

    td {
        width: 50px;
        height: 50px;
        text-align: center;
        border: 1px solid #ccc;
        cursor: pointer;
        font-size: 18px;
    }

    button {
        width: 100%;
        height: 100%;
        padding: 0;
        border: none;
        background: transparent;
    }
</style>


<h2>Minesweeper</h2>

<div>
    <p>Score: @Model.score</p>
    <p>Rewards Collected: @Model.collectedRewards</p>
</div>

<!-- Determine if buttons should be disabled -->
@{
    bool disableButtons = Model.DetermineGameState() != 0;
}

<table>
    @for (int row = 0; row < Model.Size; row++)
    {
        <tr>
            @for (int col = 0; col < Model.Size; col++)
            {
                var cell = Model.Cells[col, row];
                var cellId = $"{col}-{row}"; // Unique ID for each cell
                @Html.Partial("_Cell", cell)
            }
        </tr>
    }
</table>


<!-- Button to restart the game -->
@using (Html.BeginForm("RestartGame", "Game", FormMethod.Post))
{
    <button type="submit">Restart Game</button>
}

<script>
    // This function is triggered on right-click
    function handleRightClick(event, col, row) {
        event.preventDefault(); // Prevent the default right-click menu

        // Create a form and set it up to flag the cell
        var form = document.createElement('form');
        form.method = 'POST';
        form.action = '@Url.Action("FlagCell", "Game")'; // Action to handle flagging

        // Create hidden input fields to pass the cell coordinates
        var hiddenX = document.createElement('input');
        hiddenX.type = 'hidden';
        hiddenX.name = 'x';
        hiddenX.value = col;

        var hiddenY = document.createElement('input');
        hiddenY.type = 'hidden';
        hiddenY.name = 'y';
        hiddenY.value = row;

        // Append the hidden inputs to the form
        form.appendChild(hiddenX);
        form.appendChild(hiddenY);

        // Submit the form to flag the cell
        document.body.appendChild(form);
        form.submit();
    }
</script>
